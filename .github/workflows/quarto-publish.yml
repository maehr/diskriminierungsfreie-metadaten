on:
  push:
    branches:
      - main
  workflow_dispatch:

name: Render and Publish

permissions:
  contents: write
  pages: write

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Overwrite _quarto.yml
        if: github.repository == 'maehr/open-research-data-template'
        run: |
          cp .github/_quarto.yml _quarto.yml

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tinytex: true

      - name: Render Quarto Project
        uses: quarto-dev/quarto-actions/render@v2
        with:
          path: manuscript
          to: all

      - uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: Install Puppeteer
        run: npm install puppeteer

      - name: Convert HTML to PDF using Puppeteer
        run: |
          node -e "
          const puppeteer = require('puppeteer');
          const fs = require('fs');
          const path = require('path');
  
          (async () => {
            try {
              const browser = await puppeteer.launch({ headless: true });
              const page = await browser.newPage();
              const filePath = 'file://' + path.resolve('manuscript/_manuscript/index.html');
              console.log('Navigating to', filePath);
              await page.goto(filePath, { waitUntil: 'networkidle0' });
  
              // Check if the page content is loaded
              const content = await page.content();
              if (!content || content.trim().length === 0) {
                console.error('Page content is empty');
                await browser.close();
                process.exit(1);
              }
  
              // Log page content for debugging
              console.log('Page content loaded successfully.');
  
              // Ensure all elements are visible
              await page.evaluate(() => {
                const elements = document.querySelectorAll('*');
                elements.forEach(element => {
                  if (getComputedStyle(element).visibility === 'hidden' || getComputedStyle(element).display === 'none') {
                    element.style.visibility = 'visible';
                    element.style.display = 'block';
                  }
                });
              });
  
              // Wait a bit to ensure content is rendered
              await page.waitForTimeout(2000);
  
              // Create a CDP session
              const client = await page.target().createCDPSession();
  
              // Set up PDF options
              const pdfOptions = {
                path: 'manuscript/_manuscript/handbuch-diskriminierungsfreie-metadaten.pdf',
                format: 'A4',
                printBackground: true,
                margin: { top: '1in', bottom: '1in', left: '1in', right: '1in' }
              };
  
              // Generate the PDF using the DevTools Protocol
              const pdfBuffer = await client.send('Page.printToPDF', pdfOptions);
  
              // Write the PDF to a file
              fs.writeFileSync(pdfOptions.path, Buffer.from(pdfBuffer.data, 'base64'));
  
              console.log('PDF generated successfully:', pdfOptions.path);
              await browser.close();
            } catch (error) {
              console.error('Error during PDF generation', error);
              process.exit(1);
            }
          })();
          "

      - name: Publish to GitHub Pages
        uses: quarto-dev/quarto-actions/publish@v2
        with:
          path: manuscript
          target: gh-pages
          render: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
