on:
  push:
    branches:
      - main
  workflow_dispatch:

name: Render and Publish

permissions:
  contents: write
  pages: write

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Overwrite _quarto.yml
        if: github.repository == 'maehr/open-research-data-template'
        run: |
          cp .github/_quarto.yml _quarto.yml

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tinytex: true

      - name: Render Quarto Project
        uses: quarto-dev/quarto-actions/render@v2
        with:
          path: manuscript
          to: all

      # - uses: actions/setup-node@v4
      #   with:
      #     node-version: 21

      # - name: Install Puppeteer
      #   run: npm install puppeteer

      # - name: Convert HTML to PDF using DevTools Protocol
      #   run: |
      #     node -e "
      #     import puppeteer from 'puppeteer';
      #     import fs from 'fs';
      #     import path from 'path';

      #     (async () => {
      #       const browser = await puppeteer.launch({ headless: true });
      #       const page = await browser.newPage();
      #       const filePath = 'file://' + path.resolve('manuscript/_manuscript/index.html');
      #       await page.goto(filePath, { waitUntil: 'networkidle0' });

      #       // Check if the page content is loaded
      #       const content = await page.content();
      #       if (!content || content.trim().length === 0) {
      #         console.error('Page content is empty');
      #         await browser.close();
      #         process.exit(1);
      #       }

      #       // Create a CDP session
      #       const client = await page.target().createCDPSession();

      #       // Set up PDF options
      #       const pdfOptions = {
      #         format: 'A4',
      #         landscape: true,
      #         printBackground: true,
      #         marginTop: 1 * 72,
      #         marginBottom: 1 * 72,
      #         marginLeft: 1 * 72,
      #         marginRight: 1 * 72,
      #       };

      #       // Generate the PDF using the DevTools Protocol
      #       const pdfBuffer = await client.send('Page.printToPDF', pdfOptions);

      #       // Write the PDF to a file
      #       const outputFilePath = 'manuscript/_manuscript/handbuch-diskriminierungsfreie-metadaten.pdf';
      #       fs.writeFileSync(outputFilePath, Buffer.from(pdfBuffer.data, 'base64'));

      #       await browser.close();
      #     })();
      #     "

      - name: Publish to GitHub Pages
        uses: quarto-dev/quarto-actions/publish@v2
        with:
          path: manuscript
          target: gh-pages
          render: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
