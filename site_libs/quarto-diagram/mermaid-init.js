/**
 * String.prototype.replaceAll() polyfill
 * https://gomakethings.com/how-to-replace-a-section-of-a-string-with-another-one-with-vanilla-js/
 * @author Chris Ferdinandi
 * @license MIT
 */String.prototype.replaceAll||(String.prototype.replaceAll=function(t,e){return Object.prototype.toString.call(t).toLowerCase()==="[object regexp]"?this.replace(t,e):this.replace(new RegExp(t,"g"),e)});const mermaidOpts={startOnLoad:!1},defaultCSS=".label text{fill:var(--mermaid-fg-color)}.node circle,.node ellipse,.node path,.node polygon,.node rect{fill:var(--mermaid-node-bg-color);stroke:var(--mermaid-node-fg-color)}marker{fill:var(--mermaid-edge-color)!important}.edgeLabel .label rect{fill:#0000}.label{color:var(--mermaid-label-fg-color);font-family:var(--mermaid-font-family);font-weight:var(--mermaid-font-weight)}.label foreignObject{line-height:normal;overflow:visible}.label div .edgeLabel{color:var(--mermaid-label-fg-color)}.edgeLabel,.edgeLabel rect,.label div .edgeLabel{background-color:var(--mermaid-label-bg-color)}.edgeLabel,.edgeLabel rect{fill:var(--mermaid-label-bg-color);color:var(--mermaid-edge-color)}.edgePath .path,.flowchart-link{stroke:var(--mermaid-edge-color)}.edgePath .arrowheadPath{fill:var(--mermaid-edge-color);stroke:none}.cluster rect{fill:var(--mermaid-fg-color--lightest);stroke:var(--mermaid-fg-color--lighter)}.cluster span{color:var(--mermaid-label-fg-color);font-family:var(--mermaid-font-family);font-weight:var(--mermaid-font-weight)}defs #flowchart-circleEnd,defs #flowchart-circleStart,defs #flowchart-crossEnd,defs #flowchart-crossStart,defs #flowchart-pointEnd,defs #flowchart-pointStart{stroke:none}g.classGroup line,g.classGroup rect{fill:var(--mermaid-node-bg-color);stroke:var(--mermaid-node-fg-color)}g.classGroup text{fill:var(--mermaid-label-fg-color);font-family:var(--mermaid-font-family);font-weight:var(--mermaid-font-weight)}.classLabel .box{fill:var(--mermaid-label-bg-color);background-color:var(--mermaid-label-bg-color);opacity:1}.classLabel .label{fill:var(--mermaid-label-fg-color);font-family:var(--mermaid-font-family);font-weight:var(--mermaid-font-weight)}.node .divider{stroke:var(--mermaid-node-fg-color)}.relation{stroke:var(--mermaid-edge-color)}.cardinality{fill:var(--mermaid-label-fg-color);font-family:var(--mermaid-font-family);font-weight:var(--mermaid-font-weight)}.cardinality text{fill:inherit!important}defs #classDiagram-compositionEnd,defs #classDiagram-compositionStart,defs #classDiagram-dependencyEnd,defs #classDiagram-dependencyStart,defs #classDiagram-extensionEnd,defs #classDiagram-extensionStart{fill:var(--mermaid-edge-color)!important;stroke:var(--mermaid-edge-color)!important}defs #classDiagram-aggregationEnd,defs #classDiagram-aggregationStart{fill:var(--mermaid-label-bg-color)!important;stroke:var(--mermaid-edge-color)!important}g.stateGroup rect{fill:var(--mermaid-node-bg-color);stroke:var(--mermaid-node-fg-color)}g.stateGroup .state-title{fill:var(--mermaid-label-fg-color)!important;font-family:var(--mermaid-font-family);font-weight:var(--mermaid-font-weight)}g.stateGroup .composit{fill:var(--mermaid-label-bg-color)}.nodeLabel{color:var(--mermaid-label-fg-color);font-family:var(--mermaid-font-family);font-weight:var(--mermaid-font-weight)}.node circle.state-end,.node circle.state-start,.start-state{fill:var(--mermaid-edge-color);stroke:none}.end-state-inner,.end-state-outer{fill:var(--mermaid-edge-color)}.end-state-inner,.node circle.state-end{stroke:var(--mermaid-label-bg-color)}.transition{stroke:var(--mermaid-edge-color)}[id^=state-fork] rect,[id^=state-join] rect{fill:var(--mermaid-edge-color)!important;stroke:none!important}.statediagram-cluster.statediagram-cluster .inner{fill:var(--mermaid-bg-color)}.statediagram-cluster rect{fill:var(--mermaid-node-bg-color);stroke:var(--mermaid-node-fg-color)}.statediagram-state rect.divider{fill:var(--mermaid-fg-color--lightest);stroke:var(--mermaid-fg-color--lighter)}defs #statediagram-barbEnd{stroke:var(--mermaid-edge-color)}.entityBox{fill:var(--mermaid-label-bg-color);stroke:var(--mermaid-node-fg-color)}.entityLabel{fill:var(--mermaid-label-fg-color);font-family:var(--mermaid-font-family);font-weight:var(--mermaid-font-weight)}.relationshipLabelBox{fill:var(--mermaid-label-bg-color);fill-opacity:1;background-color:var(--mermaid-label-bg-color);opacity:1}.relationshipLabel{fill:var(--mermaid-label-fg-color)}.relationshipLine{stroke:var(--mermaid-edge-color)}defs #ONE_OR_MORE_END *,defs #ONE_OR_MORE_START *,defs #ONLY_ONE_END *,defs #ONLY_ONE_START *,defs #ZERO_OR_MORE_END *,defs #ZERO_OR_MORE_START *,defs #ZERO_OR_ONE_END *,defs #ZERO_OR_ONE_START *{stroke:var(--mermaid-edge-color)!important}.actor,defs #ZERO_OR_MORE_END circle,defs #ZERO_OR_MORE_START circle{fill:var(--mermaid-label-bg-color)}.actor{stroke:var(--mermaid-node-fg-color)}text.actor>tspan{fill:var(--mermaid-label-fg-color);font-family:var(--mermaid-font-family);font-weight:var(--mermaid-font-weight)}line{stroke:var(--mermaid-fg-color--lighter)}.messageLine0,.messageLine1{stroke:var(--mermaid-edge-color)}.loopText>tspan,.messageText,.noteText>tspan{fill:var(--mermaid-edge-color);stroke:none;font-family:var(--mermaid-font-family)!important;font-weight:var(--mermaid-font-weight)!important}.noteText>tspan{fill:#000}#arrowhead path{fill:var(--mermaid-edge-color);stroke:none}.loopLine{stroke:var(--mermaid-node-fg-color)}.labelBox,.loopLine{fill:var(--mermaid-node-bg-color)}.labelBox{stroke:none}.labelText,.labelText>span{fill:var(--mermaid-node-fg-color);font-family:var(--mermaid-font-family);font-weight:var(--mermaid-font-weight)}",mermaidThemeEl=document.querySelector('meta[name="mermaid-theme"]');mermaidThemeEl?mermaidOpts.theme=mermaidThemeEl.content:mermaidOpts.themeCSS=defaultCSS,mermaid.initialize(mermaidOpts);const _quartoMermaid={setSvgSize(t){const{widthInPoints:e,heightInPoints:r,explicitHeight:i,explicitWidth:a}=this.resolveSize(t);a&&i?(t.setAttribute("width",e),t.setAttribute("height",r),t.style.maxWidth=null):(a&&(t.style.maxWidth=`${e}px`),i&&(t.style.maxHeight=`${r}px`))},makeResponsive(t){const e=t.getAttribute("width");if(e===null)throw new Error("Couldn't find SVG width");Number(e.slice(0,-2))>650&&(changed=!0,t.setAttribute("width","100%"),t.removeAttribute("height"))},fixupAlignment(t,e){let r=t.getAttribute("style")||"";switch(e){case"left":r=`${r}; display: block; margin: auto auto auto 0`;break;case"right":r=`${r}; display: block; margin: auto 0 auto auto`;break;case"center":r=`${r}; display: block; margin: auto auto auto auto`;break}t.setAttribute("style",r)},resolveOptions(t){return t.parentElement.parentElement.parentElement.parentElement.dataset},resolveSize(t){const e=o=>o.endsWith("in")?Number(o.slice(0,-2)):o.endsWith("pt")||o.endsWith("px")?Number(o.slice(0,-2))/96:Number(o),r="figWidth",i="figHeight",a=this.resolveOptions(t);let n=t.getAttribute("width"),l=t.getAttribute("height");const s=()=>{const o=t.attributes.getNamedItem("viewBox").value;if(!o)return;const c=o.trim().split(" ").map(Number);if(c.length===4&&!c.some(isNaN))return c};if(!n||!l){const o=s();if(o!==void 0){const[c,p,h,u]=o;n=`${h}px`,l=`${u}px`}else throw new Error("Mermaid generated an SVG without a viewbox attribute. Without knowing the diagram dimensions, quarto cannot convert it to a PNG")}let f,g;(n.slice(0,-2)==="pt"&&l.slice(0,-2)==="pt"||n.slice(0,-2)==="px"&&l.slice(0,-2)==="px"||!isNaN(Number(n))&&!isNaN(Number(l)))&&(f=Number(n.slice(0,-2))/96,g=Number(l.slice(0,-2))/96);const v=s();if(v!==void 0){const[o,c,p,h]=v;f=p/96,g=h/96}else throw new Error("Internal Error: Couldn't resolve width and height of SVG");const b=f/g;let m,d;return a[r]&&a[i]?(m=e(String(a[r])),d=e(String(a[i]))):a[r]?(m=e(String(a[r])),d=m/b):a[i]?(d=e(String(a[i])),m=d*b):(d=g,m=f),{widthInInches:m,heightInInches:d,widthInPoints:Math.round(m*96),heightInPoints:Math.round(d*96),explicitWidth:a?.[r]!==void 0,explicitHeight:a?.[i]!==void 0}},postProcess(t){const e=this.resolveOptions(t);e.responsive&&e.figWidth===void 0&&e.figHeight===void 0?this.makeResponsive(t):this.setSvgSize(t),e.reveal&&this.fixupAlignment(t,e.figAlign||"center");const r=t.parentElement.parentElement.parentElement,i=r.parentElement.parentElement.dataset.layoutAlign;i&&(r.classList.remove("quarto-figure-left"),r.classList.remove("quarto-figure-center"),r.classList.remove("quarto-figure-right"),r.classList.add(`quarto-figure-${i}`))}};window.addEventListener("load",async function(){let t=0;for(const e of Array.from(document.querySelectorAll("pre.mermaid-js"))){const r=e.textContent.replaceAll("&nbsp;"," "),{svg:i}=await mermaid.mermaidAPI.render(`mermaid-${++t}`,r,e);if(e.innerHTML=i,e.dataset.label){const l=e.firstChild,s=l.querySelector("style");s.innerHTML=s.innerHTML.replaceAll(`#${l.id}`,`#${e.dataset.label}-mermaid`),l.id=e.dataset.label+"-mermaid",delete e.dataset.label}const a=e.querySelector("svg"),n=e.parentElement;n.removeChild(e),n.appendChild(a),a.classList.add("mermaid-js")}for(const e of Array.from(document.querySelectorAll("svg.mermaid-js")))_quartoMermaid.postProcess(e)},!1);
